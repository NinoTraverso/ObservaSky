@model Observasky.Models.Users

@{
    ViewBag.Title = "Register";
}

<link href="~/Content/CSS/Register.css" rel="stylesheet" />


@using (Html.BeginForm("Register", "Home", FormMethod.Post, new { enctype = "multipart/form-data", id = "registerForm" }))
{
    @Html.AntiForgeryToken()

    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center w-75 mx-auto mt-4 mb-3 rounded" style="background-color: rgba(33, 158, 188, 0.7);">

        <div>
            <img src="~/Content/Images/Astronaut suit-amico.png" alt="astronaut" style="max-width: 100%; height: auto;" />
        </div>
        <div class="form-horizontal">

            <h4 style="color: rgb(2, 48, 71); ">Sign Up</h4>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control rounded" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group">
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "passwordField" })
                        <div class="input-group-append ps-2">
                            <div class="input-group-append bg-dark bg-opacity-75 rounded">
                                <button type="button" id="togglePassword" class="btn btn-primary bg-primary bg-opacity-50">
                                    <img src="~/Content/Images/Blue_eye_icon.png" style="max-width: 20px; max-height: 20px;" />
                                </button>
                            </div>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Password("ConfirmPassword", null, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group m-2">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2 text-light" })
                <div class="col-md-10">
                    <input type="file" name="Image" />
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 text-center pt-2 pb-3">
                    <input type="submit" value="Register" class="btn GeneralButton" />
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var passwordField = document.getElementById("passwordField");
            var confirmPasswordField = document.getElementById("ConfirmPassword");
            var togglePassword = document.getElementById("togglePassword");
            var form = document.getElementById("registerForm");

            togglePassword.addEventListener("click", function () {
                if (passwordField.type === "password") {
                    passwordField.type = "text";
                } else {
                    passwordField.type = "password";
                }
            });

            form.addEventListener("submit", function (event) {
                if (passwordField.value !== confirmPasswordField.value) {
                    event.preventDefault();
                    alert("Password and Confirm Password must match!");
                }
            });
        });
    </script>
}

