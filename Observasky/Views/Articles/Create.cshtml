@model Observasky.Models.Articles

@{
    ViewBag.Title = "Create";
}

<link href="~/Content/CSS/Font.css" rel="stylesheet" />

<style>
    .textarea-resize {
        height: auto;
        resize: vertical;
        overflow: auto;
        word-wrap: break-word;
    }


</style>


<h2>Create</h2>


@using (Html.BeginForm("Create", "Articles", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Articles</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

     <div class="form-group">
         @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
             @Html.TextAreaFor(model => model.Title, new { @class = "form-control textarea-resize" })
             @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
         </div>
     </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Introduction, new { @class = "form-control textarea-resize" })
            @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group m-2">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2 text-light" })
        <div class="col-md-10">
            <input type="file" name="Image" />
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Main, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Main, new { @class = "form-control textarea-resize" })
            @Html.ValidationMessageFor(model => model.Main, "", new { @class = "text-danger" })
        </div>
    </div>

    @*
                <div class="form-group">
            @Html.LabelFor(model => model.Conclusions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Conclusions, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.Conclusions, "", new { @class = "text-danger" })
            </div>
        </div>


    *@

    <div class="form-group">
        @Html.LabelFor(model => model.Conclusions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Conclusions, new { @class = "form-control textarea-resize" })
            @Html.ValidationMessageFor(model => model.Conclusions, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
